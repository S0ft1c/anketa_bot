from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from loguru import logger

from sqlite_database import DB

admin_view_long_project_router = Router()


@admin_view_long_project_router.callback_query(F.data.contains('admin_view_long_project'))
async def admin_view_long_project_handler(callback: CallbackQuery, state: FSMContext):
    try:
        await state.clear()
        await callback.answer()

        order_id = callback.data.split('=')[-1]
        async with DB() as db:
            order_info = await db.select_order_by_id(order_id)
            await callback.message.answer(
                text=f'üìÖ <b>–ó–∞–∫–∞–∑ –æ—Ç {order_info['date']}</b>\n'
                     f'üë• <i>–õ—é–¥–µ–π –Ω–∞–¥–æ</i>:\n{order_info['how_many_ppl']}\n'
                     f'üè† <i>–ê–¥—Ä–µ—Å</i>:\n{order_info['address']}\n'
                     f'üîß <i>–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã</i>\n{order_info['work_desc']}\n'
                     f'üíµ <i>–û–ø–ª–∞—Ç–∞ (—Ä—É–±/—á–∞—Å)</i>\n{order_info['payment']}\n'
                     f'üìû <i>–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–ø—Ä–∞–≤–æ–∫</i>\n{order_info['help_phone']}\n\n'
                     f'‚ÑπÔ∏è <b>–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n'
                     f'üè† <i>–ê–¥—Ä–µ—Å</i>:\n{order_info['FULL_address']}\n'
                     f'üîß <i>–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã</i>:\n{order_info['FULL_work_desc']}\n'
                     f'üìû <i>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –ª–∏—Ü–∞</i>:\n{order_info['FULL_phones']}\n'
                     f'üìù<i>–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</i>:\n{order_info['FULL_additional_info']}\n\n'
                     f'{f'<u>–≠—Ç–æ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –∑–∞–∫–∞–∑. => –°—Ä–æ–∫–∏ {order_info['long_days']} –¥–Ω.</u>' if order_info['long_time']
                     else f'–≠—Ç–æ –Ω–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –∑–∞–∫–∞–∑.'}',
                parse_mode=ParseMode.HTML,
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–µ–∫—Ç–∞ —Å–µ–≥–æ–¥–Ω—è.',
                                          callback_data=f'admin_end_long_project={order_info['id']}')],
                ])
            )
    except Exception as e:
        logger.error(f'Error in admin_view_long_project_handler: {e}')
