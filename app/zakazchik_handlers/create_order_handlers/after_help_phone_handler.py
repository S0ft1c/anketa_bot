from aiogram import Router
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from loguru import logger

from utils import is_valid_phone_number
from .create_order_states import CreateOrderStates
from .back_to_zakazhick_btn import  back_to_zakazhick_btn

after_help_phone_router = Router()


@after_help_phone_router.message(CreateOrderStates.help_phone)
async def after_help_phone_handler(message: Message, state: FSMContext):
    try:
        if not is_valid_phone_number(message.text):
            await message.answer(
                text='<b>–£–∫–∞–∑–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.</b>\n\n'
                     '‚ùå –í–≤–µ–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ –Ω–æ–º–µ—Ä –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç! –í–≤–æ–¥–∏—Ç–µ –µ–≥–æ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.',
                parse_mode=ParseMode.HTML,
                reply_markup=back_to_zakazhick_btn
            )
        else:
            # update
            await state.update_data(help_phone=message.text)
            # set new state
            await state.set_state(CreateOrderStates.FULL_address)

            # answer
            await message.answer(
                text='<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!</b> <i>–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ —É–∫–∞–∑–∞–Ω–∏—é –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</i>\n\n'
                     '–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Ç—É—Ç –Ω–∞–¥–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.\n'
                     '–í –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—Å–µ –ø–∏—à–µ—Ç—Å—è –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é '
                     '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n'
                     '–≠—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—É—á–∏—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –Ω–∞ –≤–∞—à –∑–∞–∫–∞–∑.\n'
                     'üèò –ò—Ç–∞–∫, –ø—Ä–∏—Å—Ç—É–ø–∏–º. –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥—Ä–µ—Å, –∫—É–¥–∞ –Ω–∞–¥–æ –ø—Ä–∏–±—ã—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é.',
                parse_mode='HTML',
                reply_markup=back_to_zakazhick_btn
            )

    except Exception as e:
        logger.error(f'Error in after_help_phone -> {e}')
