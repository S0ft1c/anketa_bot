from aiogram import Router, F
from aiogram.types import CallbackQuery
from loguru import logger
from aiogram.fsm.context import FSMContext
from .create_order_states import CreateOrderStates
from .back_to_zakazhick_btn import back_to_zakazhick_btn

create_order_router = Router()


@create_order_router.callback_query(F.data.contains('create_order'))
async def create_order_callback_handler(callback: CallbackQuery, state: FSMContext):
    try:
        await callback.answer('')
        await state.set_state(CreateOrderStates.date)  # update state
        await callback.message.answer(
            text='<b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞. üìÖ –£–∫–∞–∑–∞–Ω–∏–µ –¥–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.</b>\n\n'
                 '<i>–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ.</i> –ü–µ—Ä–µ–π–¥–µ–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞.\n'
                 '–í–≤–µ–¥–µ—Ç–µ –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–∫–∞–∑. –î–∞—Ç—É –Ω–∞–¥–æ —É–∫–∞–∑–∞—Ç—å –≤ —Å—Ç—Ä–æ–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n'
                 '<pre>—á–∞—Å:–º–∏–Ω—É—Ç–∞ –¥–µ–Ω—å.–º–µ—Å—è—Ü.–≥–æ–¥</pre>\n'
                 '–ö–∞–∫ –ø—Ä–∏–º–µ—Ä –≤—ã –¥–æ–ª–∂–Ω—ã –Ω–∞–ø–∏—Å–∞—Ç—å - 19:30 01.04.2000.',
            parse_mode='HTML',
            reply_markup=back_to_zakazhick_btn,
        )
    except Exception as e:
        logger.error(f'Error in create_order_callback_handler -> {e}')
